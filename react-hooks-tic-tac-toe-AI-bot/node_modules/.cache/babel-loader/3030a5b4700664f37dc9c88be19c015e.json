{"ast":null,"code":"var _jsxFileName = \"D:\\\\Hoc code HTML\\\\Day 58\\\\react-hooks-tic-tac-toe-with-AI-bot-master\\\\src\\\\components\\\\game\\\\tic-tac-toe\\\\TTTBoard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { setMoveGetNext } from './../../../api/apiHandlers';\nimport './TTTBoard.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TTTBoard() {\n  _s();\n\n  const [moves, setMoves] = useState(Array(3).fill(Array(3).fill('')));\n  const [isXsTurn, setIsXsTurn] = useState(true);\n\n  function makeMove(move) {\n    if (isXsTurn) {\n      // If there's already a move in that square, return.\n      // Stringify is a hack to workaround a bug that wouldnt allow moves on\n      // the first row, unles there were moves on other rows first. TODO: fix bug.\n      if (moves[move] && JSON.stringify(moves[move]) !== JSON.stringify(['', '', ''])) {\n        return;\n      }\n\n      setMoves(items => {\n        const movesCopy = [...[].concat.apply([], items)];\n        movesCopy[move] = 'X';\n        return movesCopy;\n      });\n      return setIsXsTurn(false);\n    }\n  } // The AI consumes and returns chucked data, but to work with it in the UI\n  // I flatten it below and rechuck it here before sending to server\n\n\n  function chunkMoves(moves) {\n    const movesCopy = [...moves];\n    let chunkedMoves = [];\n\n    while (movesCopy.length > 0) {\n      chunkedMoves.push(movesCopy.splice(0, 3));\n    }\n\n    return chunkedMoves;\n  } // Flatten to manipulate and consume in the UI components\n\n\n  function flattenMoves(moves) {\n    const formattedMoves = [...[].concat.apply([], moves)];\n    setMoves(formattedMoves);\n  }\n\n  function getNextMove() {\n    return setMoveGetNext(JSON.stringify({\n      board: chunkMoves(moves)\n    }), flattenMoves, setIsXsTurn);\n  } // Make a call to the backend bot only if it isnt X's turn, which is you\n  // the main player; whereas the AI bot is Os\n\n\n  useEffect(() => {\n    if (!isXsTurn) {\n      setTimeout(() => {\n        getNextMove();\n      }, 1000);\n    }\n  }, [moves]); // Buttons are key for accessibility\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"board-container\",\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `row-items`,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: `single-move`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeMove(0),\n              children: moves[0]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `single-move`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeMove(1),\n              children: moves[1]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `single-move`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeMove(2),\n              children: moves[2]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `row-items`,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: `single-move`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeMove(3),\n              children: moves[3]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `single-move`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeMove(4),\n              children: moves[4]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `single-move`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeMove(5),\n              children: moves[5]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 6\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          className: `row-items`,\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            className: `single-move`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeMove(6),\n              children: moves[6]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `single-move`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeMove(7),\n              children: moves[7]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            className: `single-move`,\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => makeMove(8),\n              children: moves[8]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 8\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 7\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 6\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 4\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 3\n  }, this);\n}\n\n_s(TTTBoard, \"ctuTlFR1pnzlNU4WVXe/aDmo0b8=\");\n\n_c = TTTBoard;\nexport default TTTBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"TTTBoard\");","map":{"version":3,"sources":["D:/Hoc code HTML/Day 58/react-hooks-tic-tac-toe-with-AI-bot-master/src/components/game/tic-tac-toe/TTTBoard.jsx"],"names":["React","useEffect","useState","setMoveGetNext","TTTBoard","moves","setMoves","Array","fill","isXsTurn","setIsXsTurn","makeMove","move","JSON","stringify","items","movesCopy","concat","apply","chunkMoves","chunkedMoves","length","push","splice","flattenMoves","formattedMoves","getNextMove","board","setTimeout"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { setMoveGetNext } from './../../../api/apiHandlers';\nimport './TTTBoard.scss';\n\nfunction TTTBoard() {\n\tconst [moves, setMoves] = useState(Array(3).fill(Array(3).fill('')));\n\tconst [isXsTurn, setIsXsTurn] = useState(true);\n\n\tfunction makeMove(move) {\n\t\tif (isXsTurn) {\n\t\t\t// If there's already a move in that square, return.\n\t\t\t// Stringify is a hack to workaround a bug that wouldnt allow moves on\n\t\t\t// the first row, unles there were moves on other rows first. TODO: fix bug.\n\t\t\tif (moves[move] && JSON.stringify(moves[move]) !== JSON.stringify(['', '', ''])) {\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tsetMoves((items) => {\n\t\t\t\tconst movesCopy = [...[].concat.apply([], items)];\n\t\t\t\tmovesCopy[move] = 'X';\n\t\t\t\treturn movesCopy;\n\t\t\t});\n\t\t\treturn setIsXsTurn(false);\n\t\t}\n\t}\n\n\t// The AI consumes and returns chucked data, but to work with it in the UI\n\t// I flatten it below and rechuck it here before sending to server\n\tfunction chunkMoves(moves) {\n\t\tconst movesCopy = [...moves];\n\t\tlet chunkedMoves = [];\n\n\t\twhile (movesCopy.length > 0) {\n\t\t\tchunkedMoves.push(movesCopy.splice(0, 3));\n\t\t}\n\t\treturn chunkedMoves;\n\t}\n\n\t// Flatten to manipulate and consume in the UI components\n\tfunction flattenMoves(moves) {\n\t\tconst formattedMoves = [...[].concat.apply([], moves)];\n\t\tsetMoves(formattedMoves);\n\t}\n\n\tfunction getNextMove() {\n\t\treturn setMoveGetNext(JSON.stringify({ board: chunkMoves(moves) }), flattenMoves, setIsXsTurn);\n\t}\n\n\t// Make a call to the backend bot only if it isnt X's turn, which is you\n\t// the main player; whereas the AI bot is Os\n\tuseEffect(() => {\n\t\tif (!isXsTurn) {\n\t\t\tsetTimeout(() => {\n\t\t\t\tgetNextMove();\n\t\t\t}, 1000);\n\t\t}\n\t}, [moves]);\n\n\t// Buttons are key for accessibility\n\treturn (\n\t\t<div className='board-container'>\n\t\t\t<table>\n\t\t\t\t<tbody>\n\t\t\t\t\t<tr className={`row-items`}>\n\t\t\t\t\t\t<td className={`single-move`}>\n\t\t\t\t\t\t\t<button onClick={() => makeMove(0)}>{moves[0]}</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td className={`single-move`}>\n\t\t\t\t\t\t\t<button onClick={() => makeMove(1)}>{moves[1]}</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td className={`single-move`}>\n\t\t\t\t\t\t\t<button onClick={() => makeMove(2)}>{moves[2]}</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr className={`row-items`}>\n\t\t\t\t\t\t<td className={`single-move`}>\n\t\t\t\t\t\t\t<button onClick={() => makeMove(3)}>{moves[3]}</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td className={`single-move`}>\n\t\t\t\t\t\t\t<button onClick={() => makeMove(4)}>{moves[4]}</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td className={`single-move`}>\n\t\t\t\t\t\t\t<button onClick={() => makeMove(5)}>{moves[5]}</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t\t<tr className={`row-items`}>\n\t\t\t\t\t\t<td className={`single-move`}>\n\t\t\t\t\t\t\t<button onClick={() => makeMove(6)}>{moves[6]}</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td className={`single-move`}>\n\t\t\t\t\t\t\t<button onClick={() => makeMove(7)}>{moves[7]}</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t\t<td className={`single-move`}>\n\t\t\t\t\t\t\t<button onClick={() => makeMove(8)}>{moves[8]}</button>\n\t\t\t\t\t\t</td>\n\t\t\t\t\t</tr>\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t);\n}\n\nexport default TTTBoard;\n"]},"metadata":{},"sourceType":"module"}